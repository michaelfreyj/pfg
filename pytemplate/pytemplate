#!/usr/bin/env python
# -*- coding: utf-8 -*-

from argparse import ArgumentParser
import logging
import os
from pathlib import Path
import yaml

from methods import choice, read_file, parse_yaml 

parser = ArgumentParser(
        prog="pytemplate", description="Generates a new file from a skeleton",
        usage="pytemplate [options]", epilog="For more options, ask me"
        )
parser.add_argument(
        "-f", "--file", nargs=1, dest="infile", action="store",
        metavar="INFILE", help="Uses a yaml to fill out template",
        )
parser.add_argument(
        "-o", "--outfile", nargs=1, dest="outfile", action="store",
        metavar="OUTFILE", help="specify output file name",
        )
parser.add_argument(
        "-v", "--verbose", action="store_true", help="Verbose output",
        )
parser.add_argument(
        "-q", "--quiet", action="store_true", help="quiet output",
        )
parser.add_argument(
        "-d", "--debug", action="store_true", help="Create a debugging log",
        )


args = parser.parse_args()

if outfile == None:
    outfile = input("enter the name for file to be created\n>> ")

template_file = 
print(os.getcwd())
# print(args.accumulate(args.integers))

# logging.basicConfig(
#         level=logging.DEBUG, 
#         format='%(asctime) %(levelname)-8s %(message)'
#         )



        
